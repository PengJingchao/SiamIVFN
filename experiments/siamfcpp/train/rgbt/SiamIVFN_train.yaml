test:
  track:
    exp_name: &TEST_NAME "siamivfn"
    exp_save: &TEST_SAVE "results"
    model:
      backbone:
        name: "SiamIVFN"
        SiamIVFN:
          pretrain_model_path: "" # 15
      losses:
        names: []
      task_head:
        name: "DenseboxHead"
        DenseboxHead:
          total_stride: 8
          score_size: 17
          x_size: 303
          num_conv3x3: 3
          head_conv_bn: [False, False, True]
      task_model:
        name: "SiamTrack"
        SiamTrack:
          pretrain_model_path: "" # 15
    pipeline:
      name: "SiamFCppTracker"
      SiamFCppTracker:
        test_lr: 0.52
        window_influence: 0.21
        penalty_k: 0.04
        num_conv3x3: 3
    tester:
      names: ["RGBT234Tester",]  # (GTOTTester|RGBT234Tester|GOT10kPreTrainTester)
      RGBT234Tester:
        exp_name: *TEST_NAME
        exp_save: *TEST_SAVE
        subsets: [""]  # (val|test)
train:
  track:
    exp_name: &TRAIN_NAME "siamfcpp_alexnet-rgbt"
    exp_save: &TRAIN_SAVE "snapshots"
    num_processes: 1
    model:
      backbone:
        name: "SiamIVFN"
        SiamIVFN:
          pretrain_model_path: ""
      losses:
        names: ["SigmoidCrossEntropyRetina",
                "SigmoidCrossEntropyCenterness",
                "IOULoss",]
        SigmoidCrossEntropyRetina:
          name: "cls"
          weight: 1.0
          alpha: 0.25
          gamma: 2.0
        SigmoidCrossEntropyCenterness:
          name: "ctr"
          weight: 1.0
        IOULoss:
          name: "reg"
          weight: 3.0
      task_head:
        name: "DenseboxHead"
        DenseboxHead:
          total_stride: 8
          score_size: 17
          x_size: 303
          num_conv3x3: 3
          head_conv_bn: [False, False, True]
      task_model:
        name: "SiamTrack"
        SiamTrack:
          pretrain_model_path: ""
    # ==================================================
    data:
      exp_name: *TRAIN_NAME
      exp_save: *TRAIN_SAVE
      num_epochs: 300
      minibatch: &MINIBATCH 32  # 64
      num_workers: 16  #32
      nr_image_per_epoch: &NR_IMAGE_PER_EPOCH 16800 # 4200
      pin_memory: true
      datapipeline:
        name: "RegularDatapipeline"
      sampler:
        name: "TrackPairSamplerRgbtFusion"
        TrackPairSamplerRgbtFusion:
          negative_pair_ratio: 0.1
        submodules:
          dataset:
            names: [ "RGBT234Dataset", ]  # (GOT10kDataset|RGBT234Dataset|GTOTDataset)
            RGBT234Dataset: &GOT10KDATASET_CFG
              ratio: 1.0
              max_diff: 100
              dataset_root: "datasets/RGBTtrain"
              subset: "train"
          filter:
            name: "TrackPairFilter"
            TrackPairFilter:
              max_area_rate: 0.6
              min_area_rate: 0.001
              max_ratio: 10
      transformer:
        names: [ "RandomCropTransformer", ]
        RandomCropTransformer:
          max_scale: 0.3
          max_shift: 0.4
          x_size: 303
      target:
        name: "DenseboxTarget"
        DenseboxTarget:
          total_stride: 8
          score_size: 17
          x_size: 303
          num_conv3x3: 3
    valdata:
      exp_name: *TRAIN_NAME
      exp_save: *TRAIN_SAVE
      num_epochs: 200
      minibatch: 32  # 64
      num_workers: 16  #32
      nr_image_per_epoch: 4200
      pin_memory: true
      datapipeline:
        name: "RegularDatapipeline"
      sampler:
        name: "TrackPairSamplerRgbtFusion"
        TrackPairSamplerRgbtFusion:
          negative_pair_ratio: 0.1
        submodules:
          dataset:
            names: [ "RGBT234Dataset", ]  # (GOT10kDataset|RGBT234Dataset|GTOTDataset)
            RGBT234Dataset:
              ratio: 1.0
              max_diff: 100
              dataset_root: "datasets/RGBTtest"
              subset: "train"
          filter:
            name: "TrackPairFilter"
            TrackPairFilter:
              max_area_rate: 0.6
              min_area_rate: 0.001
              max_ratio: 10
      transformer:
        names: [ "RandomCropTransformer", ]
        RandomCropTransformer:
          max_scale: 0.3
          max_shift: 0.4
          x_size: 303
      target:
        name: "DenseboxTarget"
        DenseboxTarget:
          total_stride: 8
          score_size: 17
          x_size: 303
          num_conv3x3: 3
    trainer:
      name: "RegularTrainer"
      RegularTrainer:
        exp_name: *TRAIN_NAME
        exp_save: *TRAIN_SAVE
        max_epoch: 200
        minibatch: *MINIBATCH
        nr_image_per_epoch: *NR_IMAGE_PER_EPOCH
        snapshot: ""
      monitors:
        names: ["TextInfo", "TensorboardLogger"]
        TextInfo:
          {}
        TensorboardLogger:
          exp_name: *TRAIN_NAME
          exp_save: *TRAIN_SAVE

# ==================================================
    optim:
      optimizer:
        name: "SGD"
        SGD:
            # to adjust learning rate, please modify "start_lr" and "end_lr" in lr_policy module bellow
            momentum: 0.9
            weight_decay: 0.0001
            minibatch: *MINIBATCH
            nr_image_per_epoch: *NR_IMAGE_PER_EPOCH
            lr_policy:
              - >
                {
                "name": "LinearLR",
                "start_lr": 0.000001,
                "end_lr": 0.08,
                "max_epoch": 1
                }
              - >
                {
                "name": "CosineLR",
                "start_lr": 0.08,
                "end_lr": 0.000001,
                "max_epoch": 19
                }
            lr_multiplier:
              - >
                {
                "name": "backbone",
                "regex": "basemodel",
                "ratio": 0.1
                }
              - >
                {
                "name": "other",
                "regex": "^((?!basemodel).)*$",
                "ratio": 1
                }
      grad_modifier:
        name: "DynamicFreezer"
        DynamicFreezer:
          schedule:
          - >
            {
            "name": "isConv",
            "regex": "basemodel\\.conv.\\.conv.*",
            "epoch": 0,
            "freezed": false
            }
          - >
            {
            "name": "isConv5",
            "regex": "basemodel\\.conv5\\.conv.*",
            "epoch": 5,
            "freezed": false
            }
          - >
            {
            "name": "isConv4",
            "regex": "basemodel\\.conv4\\.conv.*",
            "epoch": 10,
            "freezed": false
            }
          - >
            {
            "name": "isConv3",
            "regex": "basemodel\\.conv3\\.conv.*",
            "epoch": 15,
            "freezed": false
            }
